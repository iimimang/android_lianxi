package com.wyj.Activity;


import java.util.List;
import java.util.Map;


import com.wyj.Activity.R;

import com.wyj.adapter.MyOrderAdapter;

import com.wyj.dataprocessing.JsonHelper;

import com.wyj.http.WebApiUrl;
import com.wyj.pipe.Cms;
import com.wyj.pipe.SinhaPipeClient;
import com.wyj.pipe.SinhaPipeMethod;
import com.wyj.pipe.Utils;

import android.app.Activity;


import android.content.Intent;

import android.os.Bundle;


import android.text.TextUtils;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;

import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;



public class MyOrder extends Activity implements OnClickListener {

	private ImageView back_my;
	private LinearLayout my_order_wish_list, my_order_alsowish_list;
	private ListView wishorder,alsowishorder;
	private List<Map<String, Object>> order_data; // 加载到适配器中的数据源
	private  MyOrderAdapter OrderlistAdapter;
	private String mid;
	private int page = 1;
	private int pagesize = 30;
	private boolean isBottom = false;// 判断是否滚动到数据最后一条
	private SinhaPipeClient httpClient;
	private SinhaPipeMethod httpMethod;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.my_order);
		findViewById();
		setListener();

	}

	private void findViewById() {

		back_my = (ImageView) findViewById(R.id.my_order_back);
		my_order_wish_list = (LinearLayout) findViewById(R.id.my_order_wish_list);
		my_order_alsowish_list = (LinearLayout) findViewById(R.id.my_order_alsowish_list);
		wishorder=(ListView) findViewById(R.id.my_find_order_list);
		alsowishorder=(ListView) findViewById(R.id.my_find_alsowishorder_list);
		
		if(!TextUtils.isEmpty(Cms.APP.getMemberId())){
			
			mid=Cms.APP.getMemberId();
		}
		
	}

	private void setListener() {
		back_my.setOnClickListener(this);
		my_order_wish_list.setOnClickListener(this);
		my_order_alsowish_list.setOnClickListener(this);
		
		OrderlistAdapter = new MyOrderAdapter(MyOrder.this, order_data);
		wishorder.setAdapter(OrderlistAdapter);
		default_order_list() ;
	}
	
	private void default_order_list() { // 默认加载 和更换求愿 还愿

		if (isBottom) {
			isBottom = false;
		}
		page = 1;
		order_data.clear();
		listAdapter( WebApiUrl.GET_ORDERLIST + "?p=" + page + "&&pz="
				+ pagesize + "&&mid=" + mid); // 默认加载第一页
	}
	
	private void listAdapter( String url) {
		this.httpClient = new SinhaPipeClient();
		
		if (Utils.CheckNetwork()) {
			this.httpClient.Config("get", WebApiUrl.GET_addblessingsdo, null, true);
				this.httpMethod = new SinhaPipeMethod(this.httpClient, new SinhaPipeMethod.MethodCallback() {
					public void CallFinished(String error, Object result) {
						Log.i("bbbb", "-----请求回来----"+result );
						if (null == error) {
							
							List<Map<String, Object>> items;
							items = JsonHelper.jsonTolistmap((String)result,"");

							order_data.addAll(items);
							OrderlistAdapter.notifyDataSetChanged();

							if (items.toString().equals("[]")) {
								isBottom = true;
							}
							
						} else {
							int err = R.string.dialog_system_error_content;
							if (error == httpClient.ERR_TIME_OUT) {
								err = R.string.dialog_network_error_timeout;
							}
							if (error == httpClient.ERR_GET_ERR) {
								err = R.string.dialog_network_error_getdata;
							}
							Utils.ShowToast(MyOrder.this, err);
						}
					}
				});
				this.httpMethod.start();
			
		
			
		} else {
			Utils.ShowToast(MyOrder.this, R.string.dialog_network_check_content);
		}
		
	
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.my_order_back:

			Intent intent = new Intent(MyOrder.this, My.class);
			UserGroupTab.getInstance().switchActivity("My", intent, -1, -1);

			break;

		case R.id.my_order_wish_list:

			break;

		case R.id.my_order_alsowish_list:

			break;
		}
	}

	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		if (keyCode == KeyEvent.KEYCODE_BACK) {
			UserGroupTab.getInstance().onKeyDown(keyCode, event);
			return true;
		}
		return super.onKeyDown(keyCode, event);
	}
}
