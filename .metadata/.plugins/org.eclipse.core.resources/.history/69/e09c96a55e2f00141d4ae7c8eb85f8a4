package com.flysnow.sina.dbcontrol;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.test.AndroidTestCase;
import android.util.Log;

public class Userdb   extends DBHelper {
	
	
	public Userdb(Context ctx) {
		super(ctx);
		// TODO Auto-generated constructor stub
	}

	/**
	 * 创建表
	 * 
	 * @throws Exception
	 */
	public void createTable()  throws Exception {
		
		DBHelper dbHelper = new DBHelper(getContext());
		
		dbHelper.open();
		
		String deleteSql = "drop table if exists user ";
		dbHelper.execSQL(deleteSql);

		// id是自动增长的主键，username和 password为字段名， text为字段的类型
		String sql = "CREATE TABLE user (id integer primary key autoincrement, username text, password text)";
		dbHelper.execSQL(sql);
		
		
		dbHelper.closeConnection();
	}

	/**
	 * 插入数据
	 * 
	 * @throws Exception
	 */
	public void insert() throws Exception {
		DBHelper dbHelper = new DBHelper(this.getContext());
		dbHelper.open();

		ContentValues values = new ContentValues(); // 相当于map

		values.put("username", "test");
		values.put("password", "123456");

		dbHelper.insert("user", values);
		Log.i("aaaa","777777777777777777\n");
		dbHelper.closeConnection();
	}

	

	/**
	 * 更新数据
	 * 
	 * @throws Exception
	 */
	public void update() throws Exception {
		DBHelper dbHelper = new DBHelper(getContext());
		dbHelper.open();
		ContentValues initialValues = new ContentValues();
		initialValues.put("username", "changename"); // 更新的字段和值
		// 第三个参数为条件语句
		dbHelper.update("user", initialValues, "id = ?", new String[] { "1" });

		dbHelper.closeConnection();
	}

	/**
	 * 删除数据
	 * 
	 * @throws Exception
	 */
	public void delete() throws Exception {
		DBHelper dbHelper = new DBHelper(getContext());
		dbHelper.open();

		dbHelper.delete("user", "id =?'", new String[] { "1" });

		dbHelper.closeConnection();
	}

	/**
	 * 增加字段
	 * 
	 * @throws Exception
	 */
	public void addColumn() throws Exception {
		DBHelper dbHelper = new DBHelper(getContext());
		dbHelper.open();

		String updateSql = "alter table user add company text";
		dbHelper.execSQL(updateSql);
		
		dbHelper.closeConnection();
	}

	/**
	 * 查询列表
	 * 
	 * @throws Exception
	 */
	public void selectList() throws Exception {
		DBHelper dbHelper = new DBHelper(getContext());
		dbHelper.open();
		
		Cursor returnCursor = dbHelper.findList(false, "user", new String[] { "id", "username", "password" }, "username?", new String[] { "test" }, null, null, "id desc", null);
		while (returnCursor.moveToNext()) {
			String id = returnCursor.getString(returnCursor.getColumnIndexOrThrow("id"));
			String username = returnCursor.getString(returnCursor.getColumnIndexOrThrow("username"));
			String password = returnCursor.getString(returnCursor.getColumnIndexOrThrow("password"));
			//System.out.println("id=" + id + ";username=" + username + ";" + password + ";\n");
			
			Log.i("aaaa","id=" + id + ";username=" + username + ";" + password + ";\n");
		}
		
		dbHelper.closeConnection();
	}

	/**
	 * 某一条信息
	 * 
	 * @throws Exception
	 */
	public void selectInfo() throws Exception {
		DBHelper dbHelper = new DBHelper(getContext());
		dbHelper.open();
		Cursor returnCursor = dbHelper.findOne(false,"user", new String[] { "id", "username", "password" }, "id = '1'", null, null, null, "id desc",null);
		if (returnCursor != null) {
			String id = returnCursor.getString(returnCursor.getColumnIndexOrThrow("id"));
			String username = returnCursor.getString(returnCursor.getColumnIndexOrThrow("username"));
			String password = returnCursor.getString(returnCursor.getColumnIndexOrThrow("password"));
			System.out.println("id=" + id + ";username=" + username + ";" + password + ";\n");
		}
	}

	@Override
	public int delete(Uri uri, String selection, String[] selectionArgs) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public String getType(Uri uri) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Uri insert(Uri uri, ContentValues values) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean onCreate() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Cursor query(Uri uri, String[] projection, String selection,
			String[] selectionArgs, String sortOrder) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int update(Uri uri, ContentValues values, String selection,
			String[] selectionArgs) {
		// TODO Auto-generated method stub
		return 0;
	}
}
